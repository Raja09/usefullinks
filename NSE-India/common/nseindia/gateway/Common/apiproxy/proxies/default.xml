<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>FC-Security</Name>
                <Condition>!(proxy.pathsuffix MatchesPath "/captcha" OR proxy.pathsuffix MatchesPath "/userLogin")</Condition>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="userBundleMappingUsingPOST">
            <Description>Adding Bundles Based on User Id and User Type</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/bundleMapping") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="createCaptchaUsingGET">
            <Description>Generating Captcha</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/captcha") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="changeAndResetPasswordUsingPOST">
            <Description>Change Password based on the User Id</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/changePassword") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="featuresMappingUsingPOST">
            <Description>Adding bundle and segment for perticular USer</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/faturesMapping") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="segmentUserBundleMappingUsingPOST">
            <Description>Adding Segments Based on User Id and User Type</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/segmentBundleMapping") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="segmentListUsingGET">
            <Description>Getting All Segments</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/segmentDetails") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="insertNewUserUsingPOST">
            <Description>New User Creation</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="findUserDetailsByMemberIdUsingGET">
            <Description>Get User By Member ID</Description>
            <Request>
                <!--<Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>-->
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="userLoginUsingPOST">
            <Description>Login user with UserID,Password,MemberId,DeviceId</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/userLogin") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="bundleSegmentDetailsUsingPOST">
            <Description>Search Details based ON userId,MemberId</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/userSearch") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="validateProfileFieldsUsingPOST">
            <Description>Validate user Details</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/validateUser") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="ValidateOTPEnteredByUser">
            <Description>Validate OTP entered by user</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/validateOtp") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="ResendOtp">
            <Description>Resend OTP</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/resendOtp") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="ResetPassword">
            <Description>Reset Password</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/resetPassword") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="ResetPasswordLinkGeneration">
            <Description>Reset Password Link Generation</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/resetPasswordLink") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="GetTheTwoFactorAuthenticationInfoBasedOntheMemberIdAndUserId">
            <Description>Get the two factor authentication info based on the memberId and userId</Description>
            <Request>
                <!--<Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>-->
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/authentication/*/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="EnableDisableTwoFactorAuthenticationBasedOnTheMemberIdAndUserId">
            <Description>Enable or disable two factor authentication based on the memberId and userId</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/authentication") and (request.verb = "POST")</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <FaultRules>
        <FaultRule name="JS-validateRequestPayloaderror">
            <Step>
                <Name>AM-AssignValidationError</Name>
            </Step>
            <Condition>javascript.JS-ValidateRequest.failed is true</Condition>
        </FaultRule>
    </FaultRules>
    <HTTPProxyConnection>
        <BasePath>/dev/v1/common</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>