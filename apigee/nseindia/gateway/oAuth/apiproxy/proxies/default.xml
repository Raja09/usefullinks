<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>RF-invalidContent</Name>
                <Condition>(request.verb != "OPTIONS" AND request.header.Content-Type != "application/json")</Condition>
            </Step>
            <Step>
                <Name>JS-ValidateRequest</Name>
                <Condition>(request.verb != "OPTIONS")</Condition>
            </Step>
            <Step>
                <Name>RF-ValidationError</Name>
                <Condition>(js.errorMessage = "Invalid parameters")</Condition>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="OptionsPreFlight">
            <Request/>
            <Response>
                <Step>
                    <Name>add-cors</Name>
                </Step>
            </Response>
            <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
        </Flow>
        <Flow name="Generate Access token">
            <Request>
                <Step>
                    <Name>EV-RequestParameters</Name>
                </Step>
                <Step>
                    <Name>AM-SetParameters</Name>
                </Step>
                <Step>
                    <Name>OA-GenerateAccessToken</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.OA-GenerateAccesToken.failed is true</Condition>
                    <Name>RF-UnknownRequest</Name>
                </Step>
                <Step>
                    <Name>SC-UserAuthentication</Name>
                </Step>
                <Step>
                    <Name>KVM-GetPrivateKey</Name>
                </Step>
                <Step>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <Name>GenerateJWT</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>EV-SCUserLoginResponse</Name>
                </Step>
                <Step>
                    <Name>JS-SetResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token")</Condition>
        </Flow>
        <Flow name="Generate Access token using Refresh token">
            <Request>
                <Step>
                    <Name>EV-RefreshRequstParams</Name>
                </Step>
                <Step>
                    <Name>AM-SetRefreshParams</Name>
                </Step>
                <Step>
                    <Name>OA-RefreshToken</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.OA-RefreshAccesToken.failed is true</Condition>
                    <Name>RF-UnknownRequest</Name>
                </Step>
                <Step>
                    <Name>KVM-GetPrivateKey</Name>
                </Step>
                <Step>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <Name>GenerateJWT</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>EV-SCUserLoginResponse</Name>
                </Step>
                <Step>
                    <Name>JS-SetResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/refreshToken")</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <FaultRules>
        <FaultRule name="SC-UserAuthenticationFailed">
            <Step>
                <Name>EV-SCResponse</Name>
            </Step>
            <Step>
                <Name>AM-UserAuthenticationError</Name>
            </Step>
            <!--<Condition>SCResponse.status.code != 200</Condition>-->
            <Condition>servicecallout.SC-UserAuthentication.failed is true</Condition>
        </FaultRule>
        <FaultRule name="JS-RequestValidationError">
            <Step>
                <Name>AM-JSValidateRequestFailed</Name>
            </Step>
            <Condition>(javascript.JS-ValidateRequest.failed is true)</Condition>
        </FaultRule>
        <!--<FaultRule name="InvalidRefreshToken">
            <Condition>(response.status.code &gt;= 400)</Condition>
            <Step>
                <Name>AM-DefaultError</Name>
            </Step>
        </FaultRule>-->
    </FaultRules>
    <!--<DefaultFaultRule name="df-error">
        <Step>
            <Name>AM-DefaultError</Name>
        </Step>
    </DefaultFaultRule>-->
    <HTTPProxyConnection>
        <BasePath>/oauth</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <!--<RouteRule name="NoRoute">
        <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
    </RouteRule>-->
    <RouteRule name="noRoute"/>
</ProxyEndpoint>