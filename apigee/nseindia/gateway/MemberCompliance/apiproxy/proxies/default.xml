<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <PreFlow name="PreFlow">
        <Request>
            <!--
            <Step>
                <Name>FC-Security</Name>
            </Step>
            -->
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
    	<Flow name="getDirectorDetailsUsingGET">
            <Description>Validate a director cannot be a designated director in more than 1 company</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/director") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getDirectorsDetailsUsingGET">
            <Description>Get the Directors details and compliance officer details</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="updateDirectorDetailsUsingPOST">
            <Description>Update basis details of director with contact person details</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/basicDetails") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="validateChangeInDirectorsTypesUsingPOST">
            <Description>Validates the change in director request</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/cidTypes") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="getDirectorsCountUsingGET">
            <Description>Get the existing directors count for a trading member Id</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/count") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getSampleDocumentsUsingGET">
            <Description>Get the sample document on sub-request type</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/document") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="uploadDocumentsUsingPOST">
            <Description>Upload documents of director</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/documents") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="deleteDirectorsDocumentsUsingDELETE">
            <Description>Delete document for directors</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/documents") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="saveDirectorExperienceUsingPOST">
            <Description>Save experience details of director</Description>
            <Request>
                <Step>
                    <Name>JS-ValidateRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/directors/experiences") and (request.verb = "POST")</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <FaultRules>
        <FaultRule name="JS-validateRequestPayloaderror">
            <Step>
                <Name>AM-AssignValidationError</Name>
            </Step>
            <Condition>javascript.JS-ValidateRequest.failed is true</Condition>
        </FaultRule>
    </FaultRules>
    <HTTPProxyConnection>
        <BasePath>/v1/memberCompliance</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>